//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Web.PPOK_System_Service {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PPOK_System_Service.IPPOK_Refill_System_Service")]
    public interface IPPOK_Refill_System_Service {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPPOK_Refill_System_Service/DoWork", ReplyAction="http://tempuri.org/IPPOK_Refill_System_Service/DoWorkResponse")]
        string DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPPOK_Refill_System_Service/DoWork", ReplyAction="http://tempuri.org/IPPOK_Refill_System_Service/DoWorkResponse")]
        System.Threading.Tasks.Task<string> DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPPOK_Refill_System_Service/submitUserConfirmation", ReplyAction="http://tempuri.org/IPPOK_Refill_System_Service/submitUserConfirmationResponse")]
        void submitUserConfirmation(int userId, bool confirmation, int communticationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPPOK_Refill_System_Service/submitUserConfirmation", ReplyAction="http://tempuri.org/IPPOK_Refill_System_Service/submitUserConfirmationResponse")]
        System.Threading.Tasks.Task submitUserConfirmationAsync(int userId, bool confirmation, int communticationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPPOK_Refill_System_Service/unSubscribe", ReplyAction="http://tempuri.org/IPPOK_Refill_System_Service/unSubscribeResponse")]
        void unSubscribe(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPPOK_Refill_System_Service/unSubscribe", ReplyAction="http://tempuri.org/IPPOK_Refill_System_Service/unSubscribeResponse")]
        System.Threading.Tasks.Task unSubscribeAsync(int userId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPPOK_Refill_System_ServiceChannel : Web.PPOK_System_Service.IPPOK_Refill_System_Service, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PPOK_Refill_System_ServiceClient : System.ServiceModel.ClientBase<Web.PPOK_System_Service.IPPOK_Refill_System_Service>, Web.PPOK_System_Service.IPPOK_Refill_System_Service {
        
        public PPOK_Refill_System_ServiceClient() {
        }
        
        public PPOK_Refill_System_ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PPOK_Refill_System_ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PPOK_Refill_System_ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PPOK_Refill_System_ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string DoWork() {
            return base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task<string> DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public void submitUserConfirmation(int userId, bool confirmation, int communticationId) {
            base.Channel.submitUserConfirmation(userId, confirmation, communticationId);
        }
        
        public System.Threading.Tasks.Task submitUserConfirmationAsync(int userId, bool confirmation, int communticationId) {
            return base.Channel.submitUserConfirmationAsync(userId, confirmation, communticationId);
        }
        
        public void unSubscribe(int userId) {
            base.Channel.unSubscribe(userId);
        }
        
        public System.Threading.Tasks.Task unSubscribeAsync(int userId) {
            return base.Channel.unSubscribeAsync(userId);
        }
    }
}
